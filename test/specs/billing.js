const { goToPage } = require('./sidebar');

const creditCardNumber = require('../test-data/testdata').user.creditCardNumber;
const expDate = require('../test-data/testdata').user.creditCardExpiredDate;
const CVC = require('../test-data/testdata').user.creditCardCVC;

const outlookLink = require('../test-data/testLink').Link.OUTLOOK_LINK;
const resetPwdLink = require('../test-data/testLink').Link.RESET_PASSWORD_LINK;
const pricingLink = require('../test-data/testLink').Link.PRICING_LINK;

describe('Billing', () => {
    describe('Payment Methods', () => {
        it('Add Credit Card', async () => {
            await $('div[data-name="profile-entrance"]').waitForClickable({ timeout: 10000 })
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Billing"]').waitForClickable({ timeout: 5000 })
            await $('span[data-name="deal-tab-item-Billing"]').click()
            await delay(5000)
            const noCard = await $('app-profile app-billing a[data-action="add-credit-card"]').isClickable()
            if(noCard) {
                await $('app-profile app-billing a[data-action="add-credit-card"]').click()
            }
            else {
                await $('app-profile app-billing button[data-action="add-new-payment"]').waitForClickable({ timeout: 3000 })         
                await $('app-profile app-billing button[data-action="add-new-payment"]').click()      
            }
            await $('div.cdk-overlay-container app-card').waitForDisplayed({ timeout: 2000 })
            const mainFrame = await $('div.cdk-overlay-container app-card stripe-card iframe')
            await mainFrame.waitForExist({ timeout: 10000 })
            await browser.switchToFrame(mainFrame)
            await delay(3000)
            await $('form.ElementsApp input[name="cardnumber"]').setValue(creditCardNumber)
            await $('form.ElementsApp input[name="exp-date"]').setValue(expDate)
            await $('form.ElementsApp input[name="cvc"]').setValue(CVC)
            await browser.switchToParentFrame()
            await delay(1000)
            await $('button[data-action="billing-update-save"]').click()
            await delay(10000)
            await expect($('app-profile app-billing div.payment-container table tbody tr:last-of-type td.card-col div.card-img img')).toBeDisplayed()
            await delay(2000)
        })
        it('Edit Credit Card', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Billing"]').click()
            await delay(5000)
            await $('app-billing div.payment-container table tr:first-of-type button[data-action="billing-pencil"]').waitForClickable({ timeout: 5000 })
            await $('app-billing div.payment-container table tr:first-of-type button[data-action="billing-pencil"]').click()
            await $('div.cdk-overlay-container app-card').waitForDisplayed({ timeout: 2000 })
            // await $('div.cdk-overlay-container app-card select[name="exp_month"]').click()
            // await $('div.cdk-overlay-container app-card select[name="exp_month"] option[ng-reflect-value="12"]').click()
            // await $('div.cdk-overlay-container app-card select[name="exp_month"]').selectByAttributes('ng-reflect-value', '12')
            await $('div.cdk-overlay-container app-card select[name="exp_month"]').selectByVisibleText('12')
            await $('button[data-action="billing-update-save"]').click()
            await $('div.cdk-overlay-container app-card').waitForDisplayed({ reverse: true })
            await expect($('app-billing div.payment-container table tr:first-of-type td.expire-col')).toHaveText('12 / 2025')
            await delay(2000)
        })
        it('Remove Credit Card', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Billing"]').click()
            await delay(5000)
            await $('app-billing div.payment-container table tbody tr:last-of-type button[ng-reflect-ngb-tooltip="Delete card"] i.i-trash').click()
            await $('app-confirm').waitForDisplayed({ timeout: 2000 })
            await $('app-confirm button[data-action="confirm-downgrade"]').click()
            await $('app-confirm').waitForDisplayed({ reverse: true })
            await delay(3000)
            const cardExist = await $('app-billing div.payment-container table tr:last-of-type td.expire-col').isExisting()
            if(cardExist) {
                await expect($('app-billing div.payment-container table tr:last-of-type td.expire-col')).not.toHaveText('11 / 2025')
            } else {
                await expect($('app-billing div.payment-container table tr:last-of-type td.expire-col')).not.toExist()
            }
            await delay(2000)
        })
    })
    describe('Invoices', () => {
        it('Invoices', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Billing"]').click()
            await expect($('div.invoice-container')).toBePresent()
            await goToPage('dashboard')
        })
    })
})
describe('Subscription', () => {
    describe.skip('change-grade', () => {
        it('Upgrade from Pro to Elite', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Subscription"]').click()
            await $('div[data-name="elite-plan"] button').waitForClickable({ timeout: 6000 })
            await $('div[data-name="elite-plan"] button').click()
            await $('button[data-action="change-grade-plan"]').waitForClickable({ timeout: 20000 })
            await $('button[data-action="change-grade-plan"]').click()
            await $('div.plans').waitForExist({ timeout: 20000 })
            await expect($('div[data-name="elite-plan"] button')).toHaveValueContaining('Your')
        })
        it('Downgrade from Elite to Pro', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Subscription"]').click()
            await $('div.plans div.pro-plan button').click()
            await $('button[data-action="change-grade-plan"]').waitForExist({ timeout: 12000 })
            await $('button[data-action="change-grade-plan"]').click()
            await $('div.plans').waitForDisplayed({ timeout: 12000 })
            await expect($('div.plans div.pro-plan button')).toHaveValueContaining('Your')
        })
        it('Downgrade from Pro to Lite', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Subscription"]').click()
            await $('div.plans div.lite-plan button').click()
            await $('button[data-action="confirm-downgrade"]').waitForClickable({ timeout: 10000 })
            await $('button[data-action="confirm-downgrade"]').click()
            await $('button[data-action="change-grade-plan"]').waitForClickable({ timeout: 6000 })
            await $('button[data-action="change-grade-plan"]').click()
            await $('div.plans').waitForExist({ timeout: 6000 })
            await expect($('div.plans div.lite-plan button')).toHaveValueContaining('Your')
        })
        it('Upgrade from Lite to Pro', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Subscription"]').click()
            await $('div.plans div.pro-plan button').click()
            await $('button[data-action="change-grade-plan"]').waitForClickable({ timeout: 6000 })
            await $('button[data-action="change-grade-plan"]').click()
            await $('div.plans').waitForExist({ timeout: 6000 })
            await expect($('div.plans div.pro-plan button')).toHaveValueContaining('Your')
        })
    })
    describe.skip('Cancel Account', () => {
        it('Software too costly', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Billing"]').waitForClickable({ timeout: 3000 })
            await $('span[data-name="deal-tab-item-Billing"]').click()
            await delay(3000)
            await $('button[data-action="account-cancel"]').waitForClickable({ timeout: 6000 })
            await $('button[data-action="account-cancel"]').click()
            await $("#cancel-reason-0").click()
            await $('button.custom-next-btn').click()
            await $('button.custom-next-btn').click()
            await $('button.custom-next-btn').click()
            await $('a[name="return-to-billing"]').waitForClickable({ timeout: 10000 })
            await $('a[name="return-to-billing"]').click()
            await expect(browser).toHaveUrl(pricingLink) 
            browser.url(HOME_LINK)
        })
        it('Software is difficult to use', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Billing"]').waitForClickable({ timeout: 3000 })
            await $('span[data-name="deal-tab-item-Billing"]').click()
            await delay(5000)
            await $('button[data-action="account-cancel"]').waitForClickable({ timeout: 6000 })
            await $('button[data-action="account-cancel"]').click()
            await $("#cancel-reason-1").click()
            await $('button.custom-next-btn').click()
            await $('button.custom-next-btn').click()
            await $('button.custom-next-btn').click()
            await $('a[name="return-to-billing"]').waitForClickable({ timeout: 10000 })
            await $('a[name="return-to-billing"]').click()
            await expect(browser).toHaveUrl(pricingLink) 
            browser.url(HOME_LINK)
        })
        it('Some of functionality I need is missing', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Billing"]').waitForClickable({ timeout: 3000 })
            await $('span[data-name="deal-tab-item-Billing"]').click()
            await delay(3000)
            await $('button[data-action="account-cancel"]').waitForClickable({ timeout: 6000 })
            await $('button[data-action="account-cancel"]').click()
            await $("#cancel-reason-2").click()
            await $('button.custom-next-btn').click()
            await $('button.custom-next-btn').click()
            await $('app-subscription-cancel-reason textarea[name="reasonFeedback"]').setValue('I decide without any reason')
            await $('button=Submit').click()
            await $('button.custom-next-btn').click()
            await $('a[name="return-to-billing"]').waitForClickable({ timeout: 10000 })
            await $('a[name="return-to-billing"]').click()
            await expect(browser).toHaveUrl(pricingLink) 
            browser.url(HOME_LINK)
        })
        it('I am using a different product', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Billing"]').waitForClickable({ timeout: 3000 })
            await $('span[data-name="deal-tab-item-Billing"]').click()
            await delay(3000)
            await $('button[data-action="account-cancel"]').waitForClickable({ timeout: 6000 })
            await $('button[data-action="account-cancel"]').click()
            await $("#cancel-reason-3").click()
            await $('button.custom-next-btn').click()
            await $('app-subscription-cancel-reason textarea[name="reasonFeedback"]').setValue('There are no other products')
            await $('button=Submit').click()
            await $('button.custom-next-btn').click()
            await $('a[name="return-to-billing"]').waitForClickable({ timeout: 10000 })
            await $('a[name="return-to-billing"]').click()
            await expect(browser).toHaveUrl(pricingLink) 
            browser.url(HOME_LINK)
        })
        it('I am not using the product', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Billing"]').waitForClickable({ timeout: 3000 })
            await $('span[data-name="deal-tab-item-Billing"]').click()
            await delay(3000)
            await $('button[data-action="account-cancel"]').waitForClickable({ timeout: 6000 })
            await $('button[data-action="account-cancel"]').click()
            await $("#cancel-reason-4").click()
            await $('button.custom-next-btn').click()
            await $('button.custom-next-btn').click()
            await $('a[name="return-to-billing"]').waitForClickable({ timeout: 10000 })
            await $('a[name="return-to-billing"]').click()
            await expect(browser).toHaveUrl(pricingLink) 
            browser.url(HOME_LINK)
        })
        it('Other reason', async () => {
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="my-profile-link"]').click()
            await $('span[data-name="deal-tab-item-Billing"]').waitForClickable({ timeout: 3000 })
            await $('span[data-name="deal-tab-item-Billing"]').click()
            await delay(3000)
            await $('button[data-action="account-cancel"]').waitForClickable({ timeout: 6000 })
            await $('button[data-action="account-cancel"]').click()
            await $("#cancel-reason-5").click()
            await $('textarea').setValue('It is not necessary to know it')
            await $('button.custom-next-btn').click()
            await $('button.custom-next-btn').click()
            await $('a[name="return-to-billing"]').waitForClickable({ timeout: 10000 })
            await $('a[name="return-to-billing"]').click()
            await expect(browser).toHaveUrl(pricingLink) 
            browser.url(HOME_LINK)
        })
    })
})
describe.skip('Security', () => {
    describe('Update Password', () => {
        describe('Change with new password', () => {
            it('Change', async () => {
                await $('div[data-name="profile-entrance"]').click()
                await $('a[data-name="my-profile-link"]').click()
                await $('span[data-name="deal-tab-item-Security"]').click()
                await $('input[name="oldPassword"]').setValue(password)
                await $('input[name="newPassword"]').setValue(newPassword)
                await $('input[name="confirmPassword"]').setValue(newPassword)
                await $('button[data-action="change-password"]').click()
                await delay(5000)
            })
            it('Logout and Login again', async () => {
                await $('div[data-name="profile-entrance"]').waitForClickable({ timeout: 3000 })
                await $('div[data-name="profile-entrance"]').click()
                await $('a[data-name="logout-link"]').click()
                await delay(10000)
                await expect(browser).toHaveUrl(LOGIN_LINK)
                await $('input[data-name="login-email"]').setValue(email)
                await $('input[data-name="login-password"]').setValue(newPassword)
                await $('button[data-action="login-submit"]').click()
                await expect(browser).toHaveUrl(HOME_LINK)
            })
        })
        describe('Change with original password', () => {
            it('Change', async () => {
                await $('div[data-name="profile-entrance"]').click()
                await $('a[data-name="my-profile-link"]').click()
                await $('span[data-name="deal-tab-item-Security"]').click()
                await $('input[name="oldPassword"]').setValue(newPassword)
                await $('input[name="newPassword"]').setValue(password)
                await $('input[name="confirmPassword"]').setValue(password)
                await $('button[data-action="change-password"]').click()
                await delay(5000)
            })
            it('Logout and Login again', async () => {
                await $('div[data-name="profile-entrance"]').waitForClickable({ timeout: 3000 })
                await $('div[data-name="profile-entrance"]').click()
                await $('a[data-name="logout-link"]').click()
                await delay(10000)
                await expect(browser).toHaveUrl(LOGIN_LINK)
                await $('input[data-name="login-email"]').setValue(email)
                await $('input[data-name="login-password"]').setValue(password)
                await $('button[data-action="login-submit"]').click()
                await expect(browser).toHaveUrl(HOME_LINK)
            })
        })
    })
    describe('Forgot Password', () => {
        it('Logout', async () => {
            await $('div[data-name="profile-entrance"]').waitForClickable({ timeout: 3000 })
            await $('div[data-name="profile-entrance"]').click()
            await $('a[data-name="logout-link"]').click()
        })
        it('Forgot password prompt', async () => {
            browser.url(LOGIN_LINK)
            browser.maximizeWindow()
            await $('input[data-name="login-email"]').setValue(email)
            await $('a[id="forgot_password_link"]').click()
            await $('input[data-name="forgot-password-email"]').setValue(email)
            await $('button[data-action="send-reset-password-code"]').click()
            await browser.url(outlookLink)
            await $('=CRMGrow forgot password notification').click()
            let code = await $('span.x_code_text').getValue()
            await browser.url(resetPwdLink)
            await $('input[data-name="code"]').setValue(code)
            await $('input[data-name="password-to-reset"]').setValue(newPassword)
            await $('input[data-name="password-to-reset-confirm"]').setValue(newPassword)
        })
    })
})

