
const { expect, browser } = require('@wdio/globals');

let email = require('../test-data/testdata').user.email;
let password = require('../test-data/testdata').user.password;

const testPipelineName = 'test Pipeline';
const testContactName = require('../test-data/testdata').testPrepare.contact.name;
const testCommunityName = require('../test-data/testdata').testPrepare.community.name;
const testLeadStageName = 'Prospect'

const { goToPage, goToSubmenu } = require('./sidebar');
const isVortex = require('../test-data/testdata').isVortex
const delay = (ms) => {
    return new Promise(res => {
       setTimeout(() => {
        res()
       }, ms) 
    })
}

describe('Test Data Setup', () => {
    describe('Preparation', () => {
        it('Delete Test Pipeline', async () => {
            await goToPage('pipeline')
            await $('div[data-name="pipeline-name-list"] span.ml-2').waitForClickable({ timeout: 10000 })
            await $('div[data-name="pipeline-name-list"] span.ml-2').click()
            await delay(1000)
            const testPipelineExist = await $('span=' + testPipelineName).isDisplayed()
            if(testPipelineExist) {
                await $('span=' + testPipelineName).click()
                await delay(3000)
                await $('div.page-title-wrapper div.actions-opacity i.i-menu-more').click()
                await $('button[data-action="delete-pipeline"]').click()
                await $('mat-dialog-container').waitForDisplayed({ timeout: 3000 })
                const appDeletePipeline = await $('mat-dialog-container app-delete-pipeline').isDisplayed()
                const appConfirm = await $('mat-dialog-container app-confirm').isDisplayed()
                if(appDeletePipeline) {
                    await $('div[data-name="pipeline-remove-with"]').click()
                    await $('button[data-action="pipeline-delete-confirm"]').click()
                    await $('app-delete-pipeline').waitForDisplayed({ reverse: true })
                }
                if(appConfirm) {
                    await $('button[data-action="confirm-downgrade"]').click()
                    await $('app-confirm').waitForDisplayed({ reverse: true })
                }
                await delay(3000)
            }
        })
    })
})
describe('Create New Pipeline', () => {
    it('Create', async () => {
        await goToPage('pipeline')
        await $('div[data-name="pipeline-name-list"]').click()
        await $('div[data-name="add-new-pipeline"]').click()
        await $('input[data-name="pipeline-title"]').setValue(testPipelineName)
        await $('button[data-action="pipeline-create-confirm"]').click()
        await delay(5000)   
        await expect($('h1[data-name="current-pipeline-title"]')).toHaveText('Pipelines - ' + testPipelineName)
        await delay(3000)
    })
    it('Add New Stages', async () => {
        await goToPage('pipeline')
        await $('app-deals div.page-title-wrapper div.pipeline-actions i.i-menu-more').click()
        await $('button[data-action="pipeline-goto-settings"]').click()
        await $('button[data-action="pipeline-add-new-stage"]').waitForClickable({ timeout: 5000 })
        await $('button[data-action="pipeline-add-new-stage"]').click()
        await $('app-deal-stage-create').waitForDisplayed({ timeout: 3000 })
        await $('input[data-name="new-stage-title"]').setValue('1st stage')
        await $('button[data-action="new-stage-create"]').click()
        await $('app-deal-stage-create').waitForDisplayed({ reverse: true })
        await $('a[data-action="pipeline-manager-new-stage"]').waitForClickable({ timeout: 3000 })
        await $('a[data-action="pipeline-manager-new-stage"]').click()
        await $('app-deal-stage-create').waitForDisplayed({ timeout: 3000 })
        await $('input[data-name="new-stage-title"]').setValue('2nd stage')
        await $('button[data-action="new-stage-create"]').click()
        await $('app-deal-stage-create').waitForDisplayed({ reverse: true })
        await $('a[data-action="pipeline-manager-new-stage"]').waitForClickable({ timeout: 3000 })
        await $('a[data-action="pipeline-manager-new-stage"]').click()
        await $('app-deal-stage-create').waitForDisplayed({ timeout: 3000 })
        await $('input[data-name="new-stage-title"]').setValue('3rd stage')
        await $('button[data-action="new-stage-create"]').click()
        await $('app-deal-stage-create').waitForDisplayed({ reverse: true })
        await $('a[data-action="pipeline-manager-new-stage"]').waitForClickable({ timeout: 3000 })
        await $('a[data-action="pipeline-manager-new-stage"]').click()
        await $('app-deal-stage-create').waitForDisplayed({ timeout: 3000 })
        await $('input[data-name="new-stage-title"]').setValue('4th stage')
        await $('button[data-action="new-stage-create"]').click()
        await $('app-deal-stage-create').waitForDisplayed({ reverse: true })
        await delay(3000)
        await goToPage('pipeline')
        await expect($('div[data-name="pipeline-stage-1st stage"]')).toExist()
        await expect($('div[data-name="pipeline-stage-2nd stage"]')).toExist()
        await expect($('div[data-name="pipeline-stage-3rd stage"]')).toExist()
        await expect($('div[data-name="pipeline-stage-4th stage"]')).toExist()
    })
})
describe('Create New Deal', () => {
    it('Create Deal', async () => {
        await goToPage('pipeline')
        const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
        if(pipeline != testPipelineName) {
            await $('div[data-name="pipeline-name-list"]').click()
            await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
            await delay(5000)
        }
        await $('button[data-action="create-new-deal"]').click()
        await $('app-deal-create').waitForDisplayed({ timeout: 2000 })
        await $('input[data-name="deal-title"]').setValue('Cooking')
        await $('select[data-name="select-stage"]').click()
        await $('option[data-name="select-stage-item-0"]').click()
        await $('input[data-name="task-contact-to-assign"]').setValue('j')
        await $('div=' + testContactName).click()
        await $('button[data-action="deal-create-confirm"]').click()
        await $('app-deal-create').waitForDisplayed({ reverse: true })
        await delay(3000)
        await expect($('div=Cooking')).toBeDisplayed()
        await expect($('div=' + testContactName)).toBeDisplayed()
    })
})
describe('Edit Stages', () => {
    beforeEach(async () => {
        await goToPage('pipeline')
        const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
        if(pipeline != testPipelineName) {
            await $('div[data-name="pipeline-name-list"]').click()
            await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
            await delay(5000)
        }
    })
    it('Rename', async () => {   
        await $('div[data-name="pipeline-stage-1st stage"] div.stage-title i.i-menu-more').click()
        await $('button[data-action="pipeline-edit-stages-rename"]').click()
        await $('app-deal-stage-update').waitForDisplayed({ timeout: 5000 })
        await delay(3000)
        await $('input[name="dealTitle"]').setValue(testLeadStageName)
        await delay(3000)
        await $('button[data-action="deal-stage-rename-confirm"]').click()
        await $('app-deal-stage-update').waitForDisplayed({ reverse: true })
        await delay(5000)
        await expect($(`div[data-name="pipeline-stage-${testLeadStageName}"] div.stage-title span.title-a`)).toHaveText(testLeadStageName)      
    })
    it('Set Duration', async () => {
        await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div.stage-title i.i-menu-more`).click()
        await $('button[data-action="pipeline-edit-stages-set-duration"]').click()
        await $('app-deal-time-duration').waitForDisplayed({ timeout: 3000 })
        await $('input[name="timeDuration"]').setValue('2')
        await $('button[data-action="edit-stage-update-duration"]').click()
        await $('app-deal-time-duration').waitForDisplayed({ reverse: true })
        await delay(5000)
        // await expect($(`div[data-name="pipeline-stage-${testLeadStageName}"] div.deal:first-of-type div.fw-400`)).toHaveText('2days left')
        await expect($(`div[data-name="pipeline-stage-${testLeadStageName}"] div.deal:first-of-type div.fw-400`)).toHaveTextContaining('left')
    })
    it.skip('Assign Automation', async () => {
        await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div.stage-title i.i-menu-more`).click()
        await $('button[data-action="pipeline-edit-stages-assign-automation"]').click()
        await $('app-deal-automation').waitForDisplayed({ timeout: 2000 })
        await $('div.mat-form-field-infix mat-select').click()
        await $('div.mat-select-search-inner input.mat-select-search-input').setValue('c')
        await $('mat-option[data-name="contact-input-automation-select-clone1"]').waitForClickable({ timeout: 5000 })
        await $('mat-option[data-name="contact-input-automation-select-clone1"]').click()
        await $('button[data-action="pipeline-stage-assign-automation"]').waitForClickable({ timeout: 5000 })
        await $('button[data-action="pipeline-stage-assign-automation"]').click()
        await $('button[data-action="confirm-downgrade"]').click()
        await $('button[data-action="create-schedule-item"]').click()
        await $('app-deal-automation').waitForDisplayed({ reverse: true })
        await $('div.page-title-wrapper i.i-menu-more').click()
        await $('button[data-action="pipeline-goto-settings"]').click()
        await expect($('div[data-name="pipeline-manager-stage-stage2"] app-input-automation div.automation-name')).toHaveText('clone1')
    })
})
describe('Deal Action', () => {
    describe('New Meeting', () => {
        beforeEach(async () => {
            await goToPage('pipeline')
            const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
            if(pipeline != testPipelineName) {
                await $('div[data-name="pipeline-name-list"]').click()
                await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                await delay(5000)
            }
        })
        it('Create', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('div[data-name="deal-actions"]').click()
            await $('button[data-action="deal-action-meeting"]').click()
            await $('input[data-name="deal-meeting-title"]').setValue('Scrum Meeting')
            await $('select[data-name="deal-time-select"]').click()
            await $('option[data-name="deal-time-select-item-0"]').click()
            await $('input[data-name="deal-location"]').setValue('Beijing')
            await browser.execute((text) => {
                document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor').innerHTML = text;
            }, '<div>Scrum meeting has been created!</div>')
            await $('button[data-action="deal-action-create"]').click()
            await $('app-calendar-dialog').waitForExist({ reverse: true })
            await delay(6000)
            await $('span[data-name="deal-tab-item-Meetings"]').click()
            await expect($('div.history-list div.history-detail:first-of-type > a.appt-title')).toHaveText('Scrum Meeting')
            await $('div.history-list div.history-detail:first-of-type i.i-menu-more').click()
            await $('div.history-list div.history-detail:first-of-type i.i-trash').click()
            await $('button[data-action="confirm-downgrade"]').click()
            await delay(5000)
        })
    })
    describe('New Email', () => {
        beforeEach(async () => {
            await goToPage('pipeline')
            const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
            if(pipeline != testPipelineName) {
                await $('div[data-name="pipeline-name-list"]').click()
                await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                await delay(5000)
            }
        })
        it('Create', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('div[data-name="deal-actions"]').click()
            await $('button[data-action="deal-action-email"]').click()
            await $('app-send-email').waitForDisplayed({ timeout: 6000 })
            await $('input[data-name="deal-send-email-subject"]').setValue('Deal New Email')
            !isVortex ? await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor').innerHTML = text;
                        }, '<div>New Email has been created!</div>')
                      : await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor > div').innerHTML = text;
                        }, 'New Email has been created!')
            await $('button[data-action="deal-email-send"]').click()
            await delay(2000)
            const businessHourDialog = await $('app-confirm-business-hour').isDisplayed()
            if(businessHourDialog) {
                await $('app-confirm-business-hour').$('button=Ok').click()
            }
            await $('app-send-email').waitForDisplayed({ reverse: true })
            await delay(3000)
            await $('span[data-name="deal-tab-item-Emails"]').click()
            await expect($('div.history-list div.history-detail:first-of-type div.subject')).toHaveText('Deal New Email')
        })
        it('DateTime', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('div[data-name="deal-actions"]').click()
            await $('button[data-action="deal-action-email"]').click()
            await $('app-send-email').waitForDisplayed({ timeout: 6000 })
            await $('input[data-name="deal-send-email-subject"]').setValue('Deal New Email')
            !isVortex ? await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor').innerHTML = text;
                        }, '<div>New Email has been created!</div>')
                      : await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor > div').innerHTML = text;
                        }, 'New Email has been created!')
            await $('i.i-schedule-send').click()
            await $('app-schedule-send mat-dialog-content table tr[data-name="schedule-time-select-1"]').click()
            await $('button[data-action="contact-item-schedule"]').click()
            await delay(2000)
            const businessHourDialog = await $('app-confirm-business-hour').isDisplayed()
            if(businessHourDialog) {
                await $('app-confirm-business-hour').$('button=Ok').click()
            }
            await $('app-send-email').waitForDisplayed({ reverse: true })
            await delay(3000)
            await $('span[data-name="deal-tab-item-Emails"]').click()
            await expect($('div.history-list div.history-detail:first-of-type div.subject')).toHaveText('Deal New Email')
        })
    })
    describe('New Text', () => {
        beforeEach(async () => {
            await goToPage('pipeline')
            const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
            if(pipeline != testPipelineName) {
                await $('div[data-name="pipeline-name-list"]').click()
                await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                await delay(5000)
            }
        })
        it('Create', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('div[data-name="deal-actions"]').click()
            await $('button[data-action="deal-action-text"]').click()
            await $('app-send-text').waitForDisplayed({ timeout: 6000 })
            await $('textarea[data-name="deal-text-description"]').setValue('New bulk text has been created!')
            await $('button[data-action="template-contact-text-send"]').click()
            await $('app-send-text').waitForDisplayed({ timeout: 9000, reverse: true })
            await delay(5000)
            const sendTextError = await $('app-detail-error').isDisplayed()
            if(sendTextError) {
                await $('app-detail-error').$('button=Close').click()
            } else {
                await $('span[data-name="deal-tab-item-Texts"]').click()
                await expect($('div.history-list div.history-detail:first-of-type app-text-timelines span')).toHaveText('New bulk text has been created!')
            }
        })
        it.skip('DateTime', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('div[data-name="deal-actions"]').click()
            await $('button[data-action="deal-action-text"]').click()
            await $('app-send-text').waitForDisplayed({ timeout: 6000 })
            await $('textarea[data-name="deal-text-description"]').setValue('New bulk text has been created!')
            await $('i.i-schedule-send').click()
            await $('app-schedule-send mat-dialog-content table tr[data-name="schedule-time-select-1"]').click()
            await $('button=Schedule').click()
            await $('app-send-text').waitForDisplayed({ timeout: 9000, reverse: true })
            await delay(5000)
            const sendTextError = await $('app-detail-error').isDisplayed()
            if(sendTextError) {
                await $('app-detail-error').$('button=Close').click()
            } else {
                await $('span[data-name="deal-tab-item-Texts"]').click()
                await expect($('div.history-list div.history-detail:first-of-type app-text-timelines span')).toHaveText('New bulk text has been created!')
            }
        })
    })
    describe('New Task', () => {
        describe('General', () => {
            beforeEach(async () => {
                await goToPage('pipeline')
                const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
                if(pipeline != testPipelineName) {
                    await $('div[data-name="pipeline-name-list"]').click()
                    await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                    await delay(5000)
                }
            })
            it('Create', async () => {
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
                await delay(5000)
                await $('div[data-name="deal-actions"]').click()
                await $('button[data-action="deal-action-task"]').click()
                await $('app-task-create').waitForDisplayed({ timeout: 9000 })
                await $('div[data-name="task-type-general"]').click()
                await delay(2000)
                await $('app-task-create input[name="content"]').setValue('New general Task')
                await delay(2000)
                await $('mat-select[data-name="task-time-select"]').click()
                await delay(2000)
                await $('div.cdk-overlay-container div.cdk-overlay-connected-position-bounding-box mat-option[data-name="task-date-time-2"]').click()
                await delay(2000)
                await $('button[data-action="new-task-create"]').click()
                await $('app-task-create').waitForDisplayed({ reverse: true })
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('div.history-list div.history-detail:first-of-type div.main-history-item div.content').waitForDisplayed({ timeout: 10000 })
                await expect($('div.history-list div.history-detail:first-of-type div.main-history-item div.content')).toHaveText('New general Task')
                await expect($('div.history-list div.history-detail:first-of-type div.main-history-item i.i-task')).toBeDisplayed()
                await $('div.history-list div.history-detail:first-of-type i.i-menu-more').click()
                await $('div.history-list div.history-detail:first-of-type i.i-trash').click()
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(5000)
            })
            it('All Day', async () => {
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
                await delay(5000)
                await $('div[data-name="deal-actions"]').click()
                await $('button[data-action="deal-action-task"]').click()
                await $('app-task-create').waitForDisplayed({ timeout: 9000 })
                await $('div[data-name="task-type-general"]').click()
                await delay(2000)
                await $('app-task-create input[name="content"]').setValue('New general Task')
                await delay(2000)
                await $('mat-select[data-name="task-time-select"]').click()
                await delay(2000)
                await $('mat-option[data-name="task-date-time-2"]').click()
                await $('label[data-name="all_day_tc"]').click()
                await delay(2000)
                await $('button[data-action="new-task-create"]').click()
                await $('app-task-create').waitForDisplayed({ reverse: true })
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('div.history-list div.history-detail:first-of-type div.main-history-item div.content').waitForDisplayed({ timeout: 10000 })
                await expect($('div.history-list div.history-detail:first-of-type div.main-history-item div.content')).toHaveText('New general Task')
                await expect($('div.history-list div.history-detail:first-of-type div.main-history-item i.i-task')).toBeDisplayed()
                await $('div.history-list div.history-detail:first-of-type i.i-menu-more').click()
                await $('div.history-list div.history-detail:first-of-type i.i-trash').click()
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(5000)
            })
        })
    })
    describe('New Note', () => {
        beforeEach(async () => {
            await goToPage('pipeline')
            const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
            if(pipeline != testPipelineName) {
                await $('div[data-name="pipeline-name-list"]').click()
                await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                await delay(5000)
            }
        })
        it('Create', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('div[data-name="deal-actions"]').click()
            await $('button[data-action="deal-action-note"]').click()
            await $('app-note-create').waitForDisplayed({ timeout: 5000 })
            !isVortex ? await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor').innerHTML = text;
                        }, '<div>New Note has been created!</div>')
                      : await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor > div').innerHTML = text;
                        }, 'New Note has been created!')
            await $('button[data-action="deal-note-create"]').click()
            await $('app-note-create').waitForDisplayed({ reverse: true })
            await expect($('div.history-list div.history-detail:first-of-type div.main-history-item div.note-content > div')).toHaveText('New Note has been created!')
            await $('div.history-list div.history-detail:first-of-type i.i-menu-more').click()
            await $('div.history-list div.history-detail:first-of-type i.i-trash').click()
            await $('button[data-action="confirm-downgrade"]').click()
            await delay(5000)
        })
    })
})
describe('Deal Record', () => {
    describe('Contact', () => {
        beforeEach(async () => {
            await goToPage('pipeline')
            const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
            if(pipeline != testPipelineName) {
                await $('div[data-name="pipeline-name-list"]').click()
                await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                await delay(5000)
            }
        })
        it('Add Contact', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('button[data-action="deal-record-add-contact"]').click()
            await $('app-deal-contact').waitForDisplayed({ timeout: 5000 })
            await delay(1000)
            await $('app-deal-contact input[data-name="task-contact-to-assign"]').setValue('j')
            await $('mat-option:first-of-type div[data-name="task-contact-assign"]').click()
            await $('button[data-action="deal-record-add-contact-confirm"]').click()
            await $('app-deal-contact').waitForDisplayed({ reverse: true })
            await delay(5000)
            await expect($('div.contact-detail:last-of-type div.name')).toHaveText(testContactName)
        })
        it('Set Primary', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            const oneMoreContact = await $('div.contact-detail:nth-of-type(2)').isExisting()
            if(oneMoreContact) {
                await $('div.contact-detail:last-of-type i.i-menu-more').click()
                await $('button[data-action="deal-contact-set-primary"]').click()
                await delay(5000)
                await expect($('div.contact-detail:last-of-type div.avatar-wrapper > div:last-of-type')).toHaveText('Primary')
                await $('div.contact-detail:first-of-type i.i-menu-more').click()
                await $('button[data-action="deal-contact-set-primary"]').click()
                await delay(5000)
            }
            else {
                await expect($('div.contact-detail:first-of-type div.avatar-wrapper > div:last-of-type')).toHaveText('Primary')
            }
        })
        it('Remove', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            const canRemove = await $('div.contact-detail:last-of-type i.i-menu-more').isDisplayed()
            if(canRemove) {
                await $('div.contact-detail:last-of-type i.i-menu-more').click()
                await $('button[data-action="deal-contact-remove"]').click()
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(1000)
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(5000)
                await expect($('div.contact-detail:last-of-type div.avatar-wrapper > div.name')).not.toHaveText(testContactName)
            }
        })
    })
    describe('Note Tab', () => {
        beforeEach(async () => {
            await goToPage('pipeline')
            const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
            if(pipeline != testPipelineName) {
                await $('div[data-name="pipeline-name-list"]').click()
                await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                await delay(5000)
            }
        })
        it('New Note', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(3000)
            await $('span[data-name="deal-tab-item-Notes"]').click()
            await $('span[data-name="deal-tab-note-new"]').click()
            await $('app-note-create').waitForDisplayed({ timeout: 5000 })
            !isVortex ? await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor').innerHTML = text;
                        }, '<div>New Note has been created!</div>')
                      : await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor > div').innerHTML = text;
                        }, 'New Note has been created!')
            await $('button[data-action="deal-note-create"]').click()
            await $('app-note-create').waitForDisplayed({ reverse: true })
            await delay(3000)
            await expect($('div.history-list div.history-detail:first-of-type div.note-content > div')).toHaveText('New Note has been created!')
        })
        it('Edit', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(3000)
            await $('span[data-name="deal-tab-item-Notes"]').click()
            await $('div.history-list div.history-detail:first-of-type i.i-menu-more').click()
            await $('div.history-list div.history-detail:first-of-type i.i-edit').click()
            await $('app-note-edit').waitForDisplayed({ timeout: 2000 })
            !isVortex ? await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor').innerHTML = text;
                        }, '<div>Note has been updated!</div>')
                      : await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor > div').innerHTML = text;
                        }, 'Note has been updated!')
            await $('button[data-action="deal-tab-note-edit-save"]').click()
            await delay(5000)
            await expect($('div.history-list div.history-detail:first-of-type div.note-content > div')).toHaveText('Note has been updated!')
        })
        it('Delete', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(3000)
            await $('span[data-name="deal-tab-item-Notes"]').click()
            await $('div.history-list div.history-detail:first-of-type i.i-menu-more').click()
            await $('div.history-list div.history-detail:first-of-type i.i-trash').click()
            await $('button[data-action="confirm-downgrade"]').click()
            await delay(5000)
            await expect($('div.history-list div.history-detail:first-of-type div.note-content > div')).not.toExist()
        })
    })
    describe('Email Tab', () => {
        it('New Email', async () => {
            await goToPage('pipeline')
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('span[data-name="deal-tab-item-Emails"]').click()
            await $('span[data-name="deal-tab-email-new"]').click()
            await $('app-send-email').waitForDisplayed({ timeout: 6000 })
            await $('input[data-name="deal-send-email-subject"]').setValue('Deal New Email')
            !isVortex ? await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor').innerHTML = text;
                        }, '<div>New Email has been created!</div>')
                      : await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor > div').innerHTML = text;
                        }, 'New Email has been created!')
            await $('button[data-action="deal-email-send"]').click()
            await delay(5000)
            await expect($('app-email-timelines:first-of-type > div:first-of-type')).toHaveText('Deal New Email')
        })
        it('Datetime', async () => {
            await goToPage('pipeline')
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('span[data-name="deal-tab-item-Emails"]').click()
            await $('span[data-name="deal-tab-email-new"]').click()
            await $('app-send-email').waitForDisplayed({ timeout: 6000 })
            await $('input[data-name="deal-send-email-subject"]').setValue('Deal New Email')
            !isVortex ? await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor').innerHTML = text;
                        }, '<div>Email date and time have been updated!</div>')
                      : await browser.execute((text) => {
                            document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor > div').innerHTML = text;
                        }, 'Email date and time have been updated!')
            await $('app-send-email i.i-schedule-send').click()
            await $('div.cdk-overlay-container app-schedule-send tr[data-name="schedule-time-select-1"]').click()
            await $('button[data-action="contact-item-schedule"]').click()
            await delay(5000)
            await expect($('app-email-timelines:first-of-type > div:first-of-type')).toHaveText('Deal New Email')
        })
    })
    describe('Text Tab', () => {
        it('New Text', async () => {
            await goToPage('pipeline')
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('span[data-name="deal-tab-item-Texts"]').click()
            await $('span[data-name="deal-tab-text-new"]').click()
            await $('app-send-text').waitForDisplayed({ timeout: 6000 })
            await $('textarea[data-name="deal-text-description"]').setValue('New bulk text has been created!')
            await $('button[data-action="template-contact-text-send"]').click()
            await $('app-send-text').waitForDisplayed({ timeout: 9000, reverse: true })
            await delay(5000)
            const sendTextError = await $('app-detail-error').isDisplayed()
            if(sendTextError) {
                await $('app-detail-error').$('button=Close').click()
            } else {
                await $('span[data-name="deal-tab-item-Texts"]').click()
                await expect($('div.history-list div.history-detail:first-of-type app-text-timelines span')).toHaveText('New bulk text has been created!')
            }
        })
    })
    describe('Meetings Tab', () => {
        beforeEach(async () => {
            await goToPage('pipeline')
            const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
            if(pipeline != testPipelineName) {
                await $('div[data-name="pipeline-name-list"]').click()
                await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                await delay(5000)
            }
        })
        it('New Meeting', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('span[data-name="deal-tab-item-Meetings"]').click()
            await $('span[data-name="deal-tab-meeting-new"]').click()
            await $('app-calendar-dialog').waitForDisplayed({ timeout: 5000 })
            await $('input[data-name="deal-meeting-title"]').setValue('Scrum Meeting')
            await delay(2000)
            await $('select[data-name="deal-time-select"]').click()
            await $('option[data-name="deal-time-select-item-0"]').click()
            await $('input[data-name="deal-location"]').setValue('Beijing')
            await browser.execute((text) => {
                document.querySelector('quill-editor[data-name="deal-action-description"] .ql-editor').innerHTML = text;
            }, '<div>Scrum meeting has been created!</div>')
            await $('button[data-action="deal-action-create"]').click()
            await $('app-calendar-dialog').waitForExist({ reverse: true })
            await delay(6000)
            await expect($('div.history-list div.history-detail:first-of-type > a.appt-title')).toHaveText('Scrum Meeting')
        })
        it('Delete', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('span[data-name="deal-tab-item-Meetings"]').click()
            await $('div.history-list div.history-detail:first-of-type i.i-menu-more').click()
            await $('div.history-list div.history-detail:first-of-type i.i-trash').click()
            await $('button[data-action="confirm-downgrade"]').click()
            await delay(5000)
            // await $('div.history-list div.history-detail:first-of-type i.i-menu-more').click()
            // await $('div.history-list div.history-detail:first-of-type i.i-trash').click()
            // await $('button[data-action="confirm-downgrade"]').click()
            // await delay(5000)
            // await $('div.history-list div.history-detail:first-of-type i.i-menu-more').click()
            // await $('div.history-list div.history-detail:first-of-type i.i-trash').click()
            // await $('button[data-action="confirm-downgrade"]').click()
            // await delay(5000)
            // await $('div.history-list div.history-detail:first-of-type i.i-menu-more').click()
            // await $('div.history-list div.history-detail:first-of-type i.i-trash').click()
            // await $('button[data-action="confirm-downgrade"]').click()
            // await delay(5000)
            // await $('div.history-list div.history-detail:first-of-type i.i-menu-more').click()
            // await $('div.history-list div.history-detail:first-of-type i.i-trash').click()
            // await $('button[data-action="confirm-downgrade"]').click()
            // await delay(5000)
            await expect($('div.history-list div.history-detail:first-of-type > a.appt-title')).not.toExist()
        })
    })
    describe('Task Tab', () => {
        describe('General', () => {
            beforeEach(async () => {
                await goToPage('pipeline')
                const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
                if(pipeline != testPipelineName) {
                    await $('div[data-name="pipeline-name-list"]').click()
                    await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                    await delay(5000)
                }
            })
            it('Create', async () => {
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('span[data-name="deal-tab-task-new"]').click()
                await $('app-task-create').waitForDisplayed({ timeout: 9000 })
                await $('div[data-name="task-type-general"]').click()
                await delay(2000)
                await $('app-task-create input[name="content"]').setValue('New general Task')
                await delay(2000)
                await $('mat-select[data-name="task-time-select"]').click()
                await $('mat-option[data-name="task-date-time-2"]').click()
                await delay(2000)
                await $('button[data-action="new-task-create"]').click()
                await $('app-task-create').waitForDisplayed({ reverse: true })
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('div.history-list div.history-detail:last-of-type div.main-history-item div.content').waitForDisplayed({ timeout: 10000 })
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item div.content')).toHaveText('New general Task')
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item i.i-task')).toBeDisplayed()
                await $('div.history-list div.history-detail:last-of-type i.i-menu-more').click()
                await $('div.history-list div.history-detail:last-of-type i.i-trash').click()
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(5000)
            })
            it('All Day', async () => {
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('span[data-name="deal-tab-task-new"]').click()
                await $('app-task-create').waitForDisplayed({ timeout: 9000 })
                await $('div[data-name="task-type-general"]').click()
                await delay(2000)
                await $('app-task-create input[name="content"]').setValue('New general Task')
                await delay(2000)
                await $('mat-select[data-name="task-time-select"]').click()
                await $('mat-option[data-name="task-date-time-2"]').click()
                await delay(2000)
                await $('label[data-name="all_day_tc"]').click()
                await $('button[data-action="new-task-create"]').click()
                await $('app-task-create').waitForDisplayed({ reverse: true })
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('div.history-list div.history-detail:last-of-type div.main-history-item div.content').waitForDisplayed({ timeout: 10000 })
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item div.content')).toHaveText('New general Task')
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item i.i-task')).toBeDisplayed()
                await $('div.history-list div.history-detail:last-of-type i.i-menu-more').click()
                await $('div.history-list div.history-detail:last-of-type i.i-trash').click()
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(5000)
            })
        })
        describe('Email', () => {
            beforeEach(async () => {
                await goToPage('pipeline')
                const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
                if(pipeline != testPipelineName) {
                    await $('div[data-name="pipeline-name-list"]').click()
                    await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                    await delay(5000)
                }
            })
            it('Create', async () => {
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('span[data-name="deal-tab-task-new"]').click()
                await $('app-task-create').waitForDisplayed({ timeout: 9000 })
                await $('div[data-name="task-type-email"]').click()
                await delay(2000)
                await $('input[id="content_tc"]').setValue('New email Task')
                await delay(2000)
                await $('mat-select[data-name="task-time-select"]').click()
                await $('mat-option[data-name="task-date-time-2"]').click()
                await delay(2000)
                await $('button[data-action="new-task-create"]').click()
                await $('app-task-create').waitForDisplayed({ reverse: true })
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('div.history-list div.history-detail:last-of-type div.main-history-item div.content').waitForDisplayed({ timeout: 3000 })
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item div.content')).toHaveText('New email Task')
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item i.i-message')).toBeDisplayed()
                await $('div.history-list div.history-detail:last-of-type i.i-menu-more').click()
                await $('div.history-list div.history-detail:last-of-type i.i-trash').click()
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(5000)
            })
        })
        describe('Call', () => {
            beforeEach(async () => {
                await goToPage('pipeline')
                const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
                if(pipeline != testPipelineName) {
                    await $('div[data-name="pipeline-name-list"]').click()
                    await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                    await delay(5000)
                }
            })
            it('Create', async () => {
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('span[data-name="deal-tab-task-new"]').click()
                await $('app-task-create').waitForDisplayed({ timeout: 9000 })
                await $('div[data-name="task-type-call"]').click()
                await delay(2000)
                await $('input[id="content_tc"]').setValue('New call Task')
                await delay(2000)
                await $('mat-select[data-name="task-time-select"]').click()
                await $('mat-option[data-name="task-date-time-2"]').click()
                await $('button[data-action="new-task-create"]').click()
                await $('app-task-create').waitForDisplayed({ reverse: true })
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item div.content')).toHaveText('New call Task')
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item i.i-phone')).toBeDisplayed()
                await $('div.history-list div.history-detail:last-of-type i.i-menu-more').click()
                await $('div.history-list div.history-detail:last-of-type i.i-trash').click()
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(5000)
            })
            it('All Day', async () => {
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 3000 })
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('span[data-name="deal-tab-task-new"]').click()
                await $('app-task-create').waitForDisplayed({ timeout: 9000 })
                await $('div[data-name="task-type-call"]').click()
                await delay(2000)
                await $('input[id="content_tc"]').setValue('New call Task')
                await delay(2000)
                await $('mat-select[data-name="task-time-select"]').click()
                await $('mat-option[data-name="task-date-time-2"]').click()
                await $('label[data-name="all_day_tc"]').click()
                await $('button[data-action="new-task-create"]').click()
                await $('app-task-create').waitForDisplayed({ reverse: true })
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item div.content')).toHaveText('New call Task')
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item i.i-phone')).toBeDisplayed()
                await $('div.history-list div.history-detail:last-of-type i.i-menu-more').click()
                await $('div.history-list div.history-detail:last-of-type i.i-trash').click()
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(5000)
            })
        })
        describe('Text', () => {
            beforeEach(async () => {
                await goToPage('pipeline')
                const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
                if(pipeline != testPipelineName) {
                    await $('div[data-name="pipeline-name-list"]').click()
                    await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                }
                await delay(5000)
            })
            it('Create', async () => {
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 9000 })
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('span[data-name="deal-tab-task-new"]').click()
                await $('app-task-create').waitForDisplayed({ timeout: 9000 })
                await $('div[data-name="task-type-text"]').click()
                await delay(2000)
                await $('input[id="content_tc"]').setValue('New text Task')
                await delay(2000)
                await $('mat-select[data-name="task-time-select"]').click()
                await $('mat-option[data-name="task-date-time-2"]').click()
                await delay(2000)
                await $('button[data-action="new-task-create"]').click()
                await $('app-task-create').waitForDisplayed({ reverse: true })
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('div.history-list div.history-detail:last-of-type div.main-history-item div.content').waitForDisplayed({ timeout: 3000 })
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item div.content')).toHaveText('New text Task')
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item i.i-sms-sent')).toBeDisplayed()
                await $('div.history-list div.history-detail:last-of-type i.i-menu-more').click()
                await $('div.history-list div.history-detail:last-of-type i.i-trash').click()
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(5000)
            })
        })
        describe('Meeting', () => {
            beforeEach(async () => {
                await goToPage('pipeline')
                const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
                if(pipeline != testPipelineName) {
                    await $('div[data-name="pipeline-name-list"]').click()
                    await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                    await delay(5000)
                }
            })
            it('Create', async () => {
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 9000 })
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('span[data-name="deal-tab-task-new"]').click()
                await $('app-task-create').waitForDisplayed({ timeout: 9000 })
                await $('div[data-name="task-type-meeting"]').click()
                await delay(2000)
                await $('input[id="content_tc"]').setValue('New meeting Task')
                await delay(2000)
                await $('mat-select[data-name="task-time-select"]').click()
                await $('mat-option[data-name="task-date-time-2"]').click()
                await delay(2000)
                await $('button[data-action="new-task-create"]').click()
                await $('app-task-create').waitForDisplayed({ reverse: true })
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('div.history-list div.history-detail:last-of-type div.main-history-item div.content').waitForDisplayed({ timeout: 3000 })
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item div.content')).toHaveText('New meeting Task')
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item i.i-lunch')).toBeDisplayed()
                await $('div.history-list div.history-detail:last-of-type i.i-menu-more').click()
                await $('div.history-list div.history-detail:last-of-type i.i-trash').click()
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(5000)
            })
            it('All Day', async () => {
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 9000 })
                await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('span[data-name="deal-tab-task-new"]').click()
                await $('app-task-create').waitForDisplayed({ timeout: 9000 })
                await $('div[data-name="task-type-meeting"]').click()
                await delay(2000)
                await $('input[id="content_tc"]').setValue('New meeting Task')
                await delay(2000)
                await $('mat-select[data-name="task-time-select"]').click()
                await $('mat-option[data-name="task-date-time-2"]').click()
                await $('label[data-name="all_day_tc"]').click()
                await delay(2000)
                await $('button[data-action="new-task-create"]').click()
                await $('app-task-create').waitForDisplayed({ reverse: true })
                await delay(5000)
                await $('span[data-name="deal-tab-item-Tasks"]').click()
                await $('div.history-list div.history-detail:last-of-type div.main-history-item div.content').waitForDisplayed({ timeout: 3000 })
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item div.content')).toHaveText('New meeting Task')
                await expect($('div.history-list div.history-detail:last-of-type div.main-history-item i.i-lunch')).toBeDisplayed()
                await $('div.history-list div.history-detail:last-of-type i.i-menu-more').click()
                await $('div.history-list div.history-detail:last-of-type i.i-trash').click()
                await $('button[data-action="confirm-downgrade"]').click()
                await delay(5000)
            })
        })
    })
    describe('Move Stage', () => {
        beforeEach(async () => {
            await goToPage('pipeline')
            const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
            if(pipeline != testPipelineName) {
                await $('div[data-name="pipeline-name-list"]').click()
                await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
                await delay(5000)
            }
        })
        it('Move', async () => {
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).waitForClickable({ timeout: 9000 })
            await $(`div[data-name="pipeline-stage-${testLeadStageName}"] div[data-name="stage-panel-0"]`).click()
            await delay(5000)
            await $('div.deal-stage i.i-triangle-down').click()
            await $('button[data-action="deal-stage-select-4th stage"]').click()
            await delay(5000)
            await expect($('span[data-name="selected-deal-stage-title"]')).toHaveText('4th stage')
            await $('div.deal-stage i.i-triangle-down').click()
            await $('button[data-action="deal-stage-select-2nd stage"]').click()
            await delay(5000)
            await expect($('span[data-name="selected-deal-stage-title"]')).toHaveText('2nd stage')
            await delay(3000)
        })
    })
})
describe('Pipeline Manager', () => {
    it('Switch Pipeline', async () => {
        await goToPage('pipeline')
        const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
        if(pipeline != testPipelineName) {
            await $('div[data-name="pipeline-name-list"]').click()
            await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
            await delay(5000)
        }
        await expect($('h1[data-name="current-pipeline-title"]')).toHaveText('Pipelines - ' + testPipelineName)
    })
})
describe('Pipeline Library', () => {
    if(!isVortex) it('Community and Team', async () => {
        const pipelineLibraryExist = await $('li[data-name="sidebar-submenu-item-pipelines_library"]').isDisplayed()     
        if(!pipelineLibraryExist) {
            await goToPage('pipeline')
            await delay(3000)
        }
        await $('li[data-name="sidebar-submenu-item-pipelines_library"]').click()
        await delay(5000)
        await expect($('table tbody tr:first-of-type td:nth-of-type(2) i.i-folder')).toExist()
        await expect($('app-pipelines-library').$(`span=${testCommunityName}`)).toBeDisplayed()
    })
})
describe('Pipeline', () => {
    beforeEach(async () => {
        await goToPage('pipeline')
        const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
        if(pipeline != testPipelineName) {
            await $('div[data-name="pipeline-name-list"]').click()
            await $(`div[data-name="pipeline-title-${testPipelineName}"]`).click()
        }
        await delay(5000)
    })
    it('Search Deal', async () => {
        await $('input[data-name="pipeline-search"]').waitForDisplayed({ timeout: 5000 })
        await $('input[data-name="pipeline-search"]').setValue('Cooking')
        await delay(3000)
        await expect($('app-deals').$('div=Cooking')).toBeDisplayed()
        await $('div.page-button-wrapper div.cancel-action').click()
        await delay(1000)
    })
    // it('Share Pipeline', async () => {
    //     await $('div.page-title-wrapper i.i-menu-more').click()
    //     await $('button[data-action="share-pipeline"]').click()
    //     await $('app-team-material-share').waitForDisplayed({ timeout: 3000 })
    //     await $('mat-select[data-name="pipeline-community-select"]').click()
    //     await delay(1000)
    //     await $(`mat-option[data-name="pipeline-community-select-item-${testCommunityName}"]`).click()
    //     await $('button[data-action="pipeline-share-unshare"]').click()
    //     await $('app-team-material-share').waitForDisplayed({ reverse: true })
    //     const pipelineLibrary = await $('li[data-name="sidebar-submenu-item-pipelines_library"]').isDisplayed()
    //     if(!pipelineLibrary) await $('div[data-name="sidebar-item-pipeline"]').click()
    //     await $('li[data-name="sidebar-submenu-item-pipelines_library"]').click()
    // })
    it('Edit Pipeline', async () => {
        await $('div.page-title-wrapper i.i-menu-more').click()
        await $('button[data-action="edit-pipeline"]').click()
        await $('app-pipeline-rename').waitForDisplayed({ timeout: 3000 })
        await $('app-pipeline-rename input[name="dealTitle"]').setValue('Updated')
        await $('button[data-action="pipeline-name-update"]').click()
        await $('app-pipeline-rename').waitForDisplayed({ reverse: true })
        await delay(3000)
        await expect($('h1[data-name="current-pipeline-title"]')).toHaveText('Pipelines - Updated')
    })
})
describe('Delete', () => {
    beforeEach(async () => {
        await goToPage('pipeline')
        const pipeline = await $('div[data-name="pipeline-name-list"] span.ml-2').getText()
        if(pipeline != "Updated") {
            await $('div[data-name="pipeline-name-list"]').click()
            await $('div[data-name="pipeline-title-Updated"]').click()
            await delay(5000)
        }
    })
    it('Deal', async () => {
        await $('div=Cooking').waitForClickable({ timeout: 3000 })
        await $('div=Cooking').click()
        await delay(5000)
        await $('div[data-name="deal-actions"]').click()
        await $('button[data-action="deal-action-delete"]').click()
        await delay(2000)
        await $('button[data-action="confirm-downgrade"]').click()
        await delay(2000)
        await $('button[data-action="confirm-downgrade"]').click()
        await delay(3000)
        await $('button[data-action="create-new-deal"]').click()
        await $('app-deal-create').waitForDisplayed({ timeout: 2000 })
        await $('input[data-name="deal-title"]').setValue('Cooking')
        await $('select[data-name="select-stage"]').click()
        await $('option[data-name="select-stage-item-0"]').click()
        await delay(3000)
        await $('input[data-name="task-contact-to-assign"]').setValue('j')
        await delay(3000)
        await $('div=' + testContactName).click()
        await delay(3000)
        await $('button[data-action="deal-create-confirm"]').click()
        await $('app-deal-create').waitForDisplayed({ reverse: true })
        await delay(3000)
    })
    it('Delete Pipeline and move sub deals to other', async () => {
        await $('div.page-title-wrapper i.i-menu-more').click()
        await $('button[data-action="delete-pipeline"]').click()
        await $('app-delete-pipeline').waitForDisplayed({ timeout: 3000 })
        await $('div[data-name="pipeline-remove-nowith"]').click()
        await $('mat-select[id="target_pipeline"]').click()
        await $('mat-option:nth-of-type(2) i.i-deals').click()
        await expect($('mat-select[id="target_stage"]')).toBeDisplayed()
        await $('button=Cancel').click()
        await $('app-delete-pipeline').waitForDisplayed({ reverse: true })
    })
    it('Delete Pipeline with sub deals', async () => {
        await $('div.page-title-wrapper i.i-menu-more').click()
        await $('button[data-action="delete-pipeline"]').click()
        await $('app-delete-pipeline').waitForDisplayed({ timeout: 3000 })
        await $('div[data-name="pipeline-remove-with"]').click()
        await $('button[data-action="pipeline-delete-confirm"]').click()
        await $('app-delete-pipeline').waitForDisplayed({ reverse: true })
        await expect($('h1=Pipelines - Updated')).not.toExist()
    })
})

